upstream tomcat {
server inst{{ ansible_default_ipv4.address[-1] | int + 1}}.bugoga.ga:8080;
  {% for host in range(HOST_COUNT | int) %}
   {% if hostvars[groups['tag_Environment_Staging'][host]]['ansible_default_ipv4']['address'] != ansible_default_ipv4.address %}
server inst{{ hostvars[groups['tag_Environment_Staging'][host]]['ansible_default_ipv4']['address'][-1] | int + 1 }}.bugoga.ga:8080 backup;
   {% endif %}
  {% endfor %}

}


server {

        root /var/www/front;
        index index.html index.htm;
        	server_name inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }} {{ DOMAIN_ROOT }};

             location / {
                          try_files $uri $uri/ =404;
             }


             location  ^~ /Back {
              proxy_http_version 1.1;
              proxy_pass http://tomcat;
              proxy_set_header Origin "http://tomcat";
       }



    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/bugoga.ga/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bugoga.ga/privkey.pem;

    ssl on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;




}



server {
    if ($host = inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }}) {
        return 301 https://$host$request_uri;
    }


    if ($host = {{ DOMAIN_ROOT }}) {
        return 301 https://$host$request_uri;
    }


        server_name inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }} {{ DOMAIN_ROOT }};
    listen 80;
    return 404;
}
