#!groovy

node('master') {
 properties([
  pipelineTriggers([
   [$class: 'GenericTrigger',
    genericVariables: [
     [ key: 'actorname', value: '$.message.from.username' ],
     [ key: 'message', value: '$.message.text' ],
    ],
    token: 'tp',
    printContributedVariables: true,
    printPostContent: true,

   ]
  ])
 ])
 script {
        set_prefix = "/set"
        ping_prefix = "/ping"
        pipe_prefix = "/pipe"
        word_array  = message.split(" ")
        if (word_array.length >= 2) { par1 = message.split(" ")[1] }
        if (word_array.length >= 3) { par2 = message.split(" ")[2] }
        if (word_array.length >= 4) { par3 = message.split(" ")[3] }
    }

if (message.startsWith(pipe_prefix)) {

  try {
    telegramSend(message: 'Trying run job ' + par1 + ' ' , chatId: -393518449)
      if (word_array.length >= 4) { build job: par1, parameters: [string(name: 'OPERATION', value: par2), string(name: 'COUNT', value: par3)] }
      else if (word_array.length >= 3) { build job: par1, parameters: [string(name: 'OPERATION', value: par2)] }
      else if (word_array.length >= 2) { build job: par1 }
    telegramSend(message: 'Job ' + par1 + ' ended' , chatId: -393518449)
      }
   catch (exc) {
    telegramSend(message: 'Job ' + par1 + ' not found' , chatId: -393518449)
    }
  }

else if (message.startsWith(ping_prefix)) {
    telegramSend(message: 'Pong' , chatId: -393518449)
    }

else if (message.startsWith(set_prefix)) {

  withEnv(["BUILD_CLOUD="+par1]) {
              sh 'echo  ' + env.BUILD_CLOUD
            }
    telegramSend(message: 'Parameter ' + par1 + ' set' , chatId: -393518449)


    }

}
