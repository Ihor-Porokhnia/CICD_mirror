#!groovy
properties([[$class: 'JiraProjectProperty'], buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5')), disableResume(), pipelineTriggers([GenericTrigger(causeString: 'Generic Cause', genericVariables: [[defaultValue: '', key: 'ref', regexpFilter: '', value: '$.ref']], printPostContent: true, regexpFilterExpression: '"refs/heads/backend"', regexpFilterText: '', token: 'bPipe')])])


    node('Backend') {

        stage('Checkout')  {
            git branch: 'backend', credentialsId: 'ssh-key-main', url: 'git@github.com:Ihor-Porokhnia/WebApp.git'
            telegramSend(message: 'Backend staging #' + env.BUILD_ID + ' successfully done' , chatId: -393518449)
        }


        stage('Test') {
            try {
                withMaven( ) {
            
            sh 'sed -i "s/<version>1.0-SNAPSHOT<\\/version>/<version>0.0.'+ env.BUILD_ID + '-SNAPSHOT<\\/version>/g" pom.xml'
            sh 'mvn clean test'
            telegramSend(message: 'Backend test #' + env.BUILD_ID + ' successfully done' , chatId: -393518449)
            
            
            
                }
          }
           catch (exc) {
            telegramSend(message: 'Backend test #' + env.BUILD_ID + ' failed' , chatId: -393518449)
            error 'FAIL'
          }
        }

        stage('Build') {

               try{
               
                  withMaven( ) {
            sh 'mvn package'
            
                       
                }


                telegramSend(message: 'Backend build #' + env.BUILD_ID + ' successfully done' , chatId: -393518449)
          }
          catch (exc) {
           telegramSend(message: 'Backend build #' + env.BUILD_ID + ' failed' , chatId: -393518449)
            error 'FAIL'
          }
        }

        stage('Deploy')  {
           try {
               sh 'sudo cp target/Backend-0.0.'+ env.BUILD_ID + '-SNAPSHOT.war /opt/tomcat/latest/webapps/Backend.war'
               sh 'sudo systemctl restart tomcat'
               sh 'sudo systemctl restart nginx'
               telegramSend(message: 'Staging backend build #' + env.BUILD_ID + ' successfully done' , chatId: -393518449)
           }
             catch (exc) {
             telegramSend(message: 'Staging backend build #' + env.BUILD_ID + ' failed' , chatId: -393518449)
             error 'FAIL'

          }

        }

}
